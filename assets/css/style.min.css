/*!
 * atomic
 * Atomic Guide Builder
 * https://gitlab.com/kishmariageorge/atomic-guide-builder.git
 * @author George Kishmareia
 * @version 1.0.0
 * Copyright 2021. MIT licensed.
 */
body{background-color:#13141c}a{text-decoration:none;font-size:16px;font-weight:700}a,body *{font-family:Source Code Pro,monospace}body *{box-sizing:border-box}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}.section{height:100vh;-ms-flex-direction:column;flex-direction:column}.hero,.section{width:100%;display:-ms-flexbox;display:flex}.hero{height:100%;-ms-flex-pack:center;justify-content:center}.hero .typed-wrap span{font-size:60px;font-family:Libre Barcode\ 128 Text,cursive;color:#01ac2d;font-weight:100}@media only screen and (max-width:768px){.hero .typed-wrap span{font-size:40px}}@media only screen and (max-width:768px){.hero .typed-wrap{margin-top:50px}}@media only screen and (max-width:768px){.hero{-ms-flex-direction:column;flex-direction:column}}.hero__code{width:50%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;transition:all .3s;position:relative;background-color:#060604}@media only screen and (max-width:768px){.hero__code{width:100%}}.hero__code:hover{background-color:#05000073}.hero__model{width:50%;height:100%;display:-ms-flexbox;display:flex;background-color:#030000;position:relative}@media only screen and (max-width:768px){.hero__model{width:100%}}.hero__model:before{content:"";position:absolute;left:0;top:0;z-index:1;width:100%;height:100%;transition:all .5s;background-color:#05000073}.hero__model:hover:before{background-color:#050000a3}.hero__bg{width:100%;height:100%;position:absolute;left:0;top:0;background-size:cover;background-image:url(../../../assets/images/mood.jpg);background-repeat:no-repeat;background-position:50%}.container{margin-left:auto;margin-right:auto;max-width:1170px;padding:50px 10px}.container,.head{width:100%;position:relative}.head{min-height:55vh;display:-ms-flexbox;display:flex}.canvas{position:absolute;z-index:1;left:0;top:0;width:100%;height:100%}.canvas #canvas{display:-ms-flexbox;display:flex;height:100%;width:100%}.canvas:after{content:"";position:absolute;left:0;bottom:0;z-index:2;width:100%;height:30%;box-shadow:inset 0 -50px 20px #000}.head .container{position:relative;z-index:2;min-height:100%}.head-about,.head .container{display:-ms-flexbox;display:flex}.head-about{-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column}.head-about h1{margin:0;color:#24ce38d4;font-size:60px;font-weight:400;font-family:Libre Barcode\ 128 Text,cursive;margin-bottom:20px;white-space:nowrap}.head-about h2{margin:0;color:#5918df;font-size:16px}.about{position:relative;overflow:hidden;height:auto;background-color:#000}.about:before{content:"";position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:100%;height:100%}.about .code-wrp{font-family:Source Code Pro,monospace;font-size:16px;line-height:1.8}.about .code-l{z-index:1;position:relative;color:#ffffff94}.about .code-l:after{content:attr(data-line-nr);position:absolute;left:-55px;color:#3b3553;font-family:Source Code Pro,monospace;font-size:16px;line-height:1.8;z-index:3;top:0}.about .code-l:hover{position:relative}.about .code-l:hover:before{background-color:#2d164263;top:0;width:300%;left:-100%;position:absolute;content:"";height:100%;z-index:-2}.about .code-l:hover:after{color:#e3244cba}.about .code-l .methods{color:#5918dfe3;display:inline}.about .propname{color:#eeff31bf}.about .dot{color:#3b3553;display:inline}.about .comment{color:#78707e;display:inline}.about .scope{color:#e3244cba;display:inline}.about .prop2{color:#24e394cf}.about .string{color:#24ce38d4}.about .number{color:#e39d24bf}footer.contact,section.about,section.head{padding:0 60px;position:relative}.timeline{width:1px;height:100%;left:-10px;top:0;z-index:9;position:absolute;background-color:#5918df}.section-title{font-size:18px;margin-bottom:30px;font-weight:300;display:inline-block;position:relative;color:#988e9f}.bullet-title:before{content:"";position:absolute;left:-26px;top:9px;z-index:10;width:9px;height:9px;background-color:#1b191e;border-radius:50%;border:2px solid #5918df;border-image:initial}.cursor:before{opacity:0;content:"|";animation:a .8s infinite}.hover.hover__underline:hover{text-decoration:underline}.hover.hover__underline{color:#5918df}@keyframes a{0%{opacity:0}50%{opacity:1}to{opacity:0}}footer{background:#000}footer .social-wrp{display:-ms-grid;display:grid;color:#5918df}footer .social-wrp svg{width:20px;margin-right:9px}footer .social-wrp path{fill:#5918df}footer .social-wrp a{margin:6px 0;font-size:16px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;text-transform:inherit;white-space:nowrap;height:30px;position:relative}footer .social-wrp a span{position:relative;color:#5918df}footer .social-wrp a span:after{position:absolute;content:">";left:99%;font-size:16px;visibility:hidden;opacity:0;color:#24ce38d4;top:0;transition:.2s}footer .social-wrp a:hover span:after{visibility:visible;opacity:1;left:110%}footer .copy{bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;color:#988e9f;font-size:14px;margin-top:30px}footer .copy svg{width:16px;margin:0 5px}@media screen and (max-width:768px){.head-about h1{font-size:34px}.about .dot{display:none}.about .code-l:after{left:-50px;font-size:12px}.about .code-wrp{font-size:12px;line-height:1.3}footer .copy{white-space:nowrap}}.model-section{width:100%;height:100vh;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.model-section span{text-align:center;color:#e3244cba;font-size:60px;font-weight:400;font-family:Libre Barcode\ 128 Text,cursive}@media screen and (max-width:768px){.model-section span{font-size:30px}}.header{-ms-flex-pack:center;justify-content:center;width:100%;position:fixed;left:0;top:0;z-index:2}.header,.header__col{display:-ms-flexbox;display:flex}.header__col{width:50%;padding:10px}@media only screen and (max-width:768px){.header__col{padding:0}}.header__title{margin:0;color:#fff}.header__firstname{font-size:54px;margin-right:5px;margin-left:auto;animation:b 2s linear 0s}.header__firstname,.header__lastname{font-family:Major Mono Display,monospace}.header__lastname{margin-top:10px;font-size:74px;animation:c 2s linear 0s}@keyframes b{0%{text-shadow:0 0 0 #01ac2d}25%{text-shadow:-50px 0 0 #01ac2d}50%{text-shadow:-100px 0 15px #01ac2d}75%{text-shadow:-150px 0 25px #01ac2d}to{text-shadow:-200px 0 300px #01ac2d}}@keyframes c{0%{text-shadow:0 0 0 #e3244c}25%{text-shadow:50px 0 0 #e3244c}50%{text-shadow:100px 0 15px #e3244c}75%{text-shadow:150px 0 25px #e3244c}to{text-shadow:200px 0 300px #e3244c}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
